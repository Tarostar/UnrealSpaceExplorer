// Copyright 1998-2014 Epic Games, Inc. All Rights Reserved.
/*===========================================================================
	Boilerplate C++ definitions for a single module.
	This is automatically generated by UnrealHeaderTool.
	DO NOT modify this manually! Edit the corresponding .h files instead!
===========================================================================*/

#include "Public/SpaceExplorer.h"
#include "SpaceExplorer.generated.dep.h"
void EmptyLinkFunctionForGeneratedCodeSpaceExplorer() {}
	void ASpaceExplorerGameMode::StaticRegisterNativesASpaceExplorerGameMode()
	{
	}
	IMPLEMENT_CLASS(ASpaceExplorerGameMode);
	void ASpaceExplorerPawn::StaticRegisterNativesASpaceExplorerPawn()
	{
	}
	IMPLEMENT_CLASS(ASpaceExplorerPawn);
#if USE_COMPILED_IN_NATIVES
// Cross Module References
	ENGINE_API class UClass* Z_Construct_UClass_AGameMode();
	ENGINE_API class UClass* Z_Construct_UClass_APawn();
	ENGINE_API class UClass* Z_Construct_UClass_UCameraComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USpringArmComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UStaticMeshComponent_NoRegister();

	SPACEEXPLORER_API class UClass* Z_Construct_UClass_ASpaceExplorerGameMode_NoRegister();
	SPACEEXPLORER_API class UClass* Z_Construct_UClass_ASpaceExplorerGameMode();
	SPACEEXPLORER_API class UClass* Z_Construct_UClass_ASpaceExplorerPawn_NoRegister();
	SPACEEXPLORER_API class UClass* Z_Construct_UClass_ASpaceExplorerPawn();
	SPACEEXPLORER_API class UPackage* Z_Construct_UPackage_SpaceExplorer();
	UClass* Z_Construct_UClass_ASpaceExplorerGameMode_NoRegister()
	{
		return ASpaceExplorerGameMode::StaticClass();
	}
	UClass* Z_Construct_UClass_ASpaceExplorerGameMode()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AGameMode();
			Z_Construct_UPackage_SpaceExplorer();
			OuterClass = ASpaceExplorerGameMode::StaticClass();
			UObjectForceRegistration(OuterClass);
			OuterClass->ClassFlags |= 0x008802A4;


			OuterClass->ClassConfigName = FName(TEXT("Game"));
			OuterClass->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
			MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Input Movement Collision Rendering Utilities|Transformation Info MovementReplication Replication Actor"));
			MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("SpaceExplorerGameMode.h"));
			MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/SpaceExplorerGameMode.h"));
			MetaData->SetValue(OuterClass, TEXT("ShowCategories"), TEXT("Input|MouseInput Input|TouchInput"));
#endif
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_ASpaceExplorerGameMode(Z_Construct_UClass_ASpaceExplorerGameMode);
	UClass* Z_Construct_UClass_ASpaceExplorerPawn_NoRegister()
	{
		return ASpaceExplorerPawn::StaticClass();
	}
	UClass* Z_Construct_UClass_ASpaceExplorerPawn()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_APawn();
			Z_Construct_UPackage_SpaceExplorer();
			OuterClass = ASpaceExplorerPawn::StaticClass();
			UObjectForceRegistration(OuterClass);
			OuterClass->ClassFlags |= 0x00800080;


			UProperty* NewProp_MinSpeed = new(OuterClass, TEXT("MinSpeed"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(MinSpeed, ASpaceExplorerPawn), 0x0000000000000001);
			UProperty* NewProp_MaxSpeed = new(OuterClass, TEXT("MaxSpeed"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(MaxSpeed, ASpaceExplorerPawn), 0x0000000000000001);
			UProperty* NewProp_TurnSpeed = new(OuterClass, TEXT("TurnSpeed"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(TurnSpeed, ASpaceExplorerPawn), 0x0000000000000001);
			UProperty* NewProp_Acceleration = new(OuterClass, TEXT("Acceleration"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(Acceleration, ASpaceExplorerPawn), 0x0000000000000001);
			UProperty* NewProp_Camera = new(OuterClass, TEXT("Camera"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(Camera, ASpaceExplorerPawn), 0x00000000044b001d, Z_Construct_UClass_UCameraComponent_NoRegister());
			UProperty* NewProp_SpringArm = new(OuterClass, TEXT("SpringArm"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(SpringArm, ASpaceExplorerPawn), 0x00000000044b001d, Z_Construct_UClass_USpringArmComponent_NoRegister());
			UProperty* NewProp_PlaneMesh = new(OuterClass, TEXT("PlaneMesh"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(PlaneMesh, ASpaceExplorerPawn), 0x00000000044b001d, Z_Construct_UClass_UStaticMeshComponent_NoRegister());
			OuterClass->ClassConfigName = FName(TEXT("Game"));
			OuterClass->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
			MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Navigation AI|Navigation"));
			MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("SpaceExplorerPawn.h"));
			MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/SpaceExplorerPawn.h"));
			MetaData->SetValue(NewProp_MinSpeed, TEXT("Category"), TEXT("Yaw"));
			MetaData->SetValue(NewProp_MinSpeed, TEXT("ModuleRelativePath"), TEXT("Public/SpaceExplorerPawn.h"));
			MetaData->SetValue(NewProp_MinSpeed, TEXT("ToolTip"), TEXT("Min forward speed"));
			MetaData->SetValue(NewProp_MaxSpeed, TEXT("Category"), TEXT("Pitch"));
			MetaData->SetValue(NewProp_MaxSpeed, TEXT("ModuleRelativePath"), TEXT("Public/SpaceExplorerPawn.h"));
			MetaData->SetValue(NewProp_MaxSpeed, TEXT("ToolTip"), TEXT("MAx forward speed"));
			MetaData->SetValue(NewProp_TurnSpeed, TEXT("Category"), TEXT("Plane"));
			MetaData->SetValue(NewProp_TurnSpeed, TEXT("ModuleRelativePath"), TEXT("Public/SpaceExplorerPawn.h"));
			MetaData->SetValue(NewProp_TurnSpeed, TEXT("ToolTip"), TEXT("How quickly pawn can steer"));
			MetaData->SetValue(NewProp_Acceleration, TEXT("Category"), TEXT("Plane"));
			MetaData->SetValue(NewProp_Acceleration, TEXT("ModuleRelativePath"), TEXT("Public/SpaceExplorerPawn.h"));
			MetaData->SetValue(NewProp_Acceleration, TEXT("ToolTip"), TEXT("How quickly forward speed changes"));
			MetaData->SetValue(NewProp_Camera, TEXT("Category"), TEXT("Camera"));
			MetaData->SetValue(NewProp_Camera, TEXT("ModuleRelativePath"), TEXT("Public/SpaceExplorerPawn.h"));
			MetaData->SetValue(NewProp_Camera, TEXT("ToolTip"), TEXT("Camera component that will be our viewpoint"));
			MetaData->SetValue(NewProp_SpringArm, TEXT("Category"), TEXT("Camera"));
			MetaData->SetValue(NewProp_SpringArm, TEXT("ModuleRelativePath"), TEXT("Public/SpaceExplorerPawn.h"));
			MetaData->SetValue(NewProp_SpringArm, TEXT("ToolTip"), TEXT("Spring arm that will offset the camera"));
			MetaData->SetValue(NewProp_PlaneMesh, TEXT("Category"), TEXT("Mesh"));
			MetaData->SetValue(NewProp_PlaneMesh, TEXT("ModuleRelativePath"), TEXT("Public/SpaceExplorerPawn.h"));
			MetaData->SetValue(NewProp_PlaneMesh, TEXT("ToolTip"), TEXT("StaticMesh component that will be the visuals for our flying pawn"));
#endif
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_ASpaceExplorerPawn(Z_Construct_UClass_ASpaceExplorerPawn);
	UPackage* Z_Construct_UPackage_SpaceExplorer()
	{
		static UPackage* ReturnPackage = NULL;
		if (!ReturnPackage)
		{
			ReturnPackage = CastChecked<UPackage>(StaticFindObjectFast(UPackage::StaticClass(), NULL, FName(TEXT("/Script/SpaceExplorer")), false, false));
			ReturnPackage->PackageFlags |= PKG_CompiledIn | 0x00000000;
			FGuid Guid;
			Guid.A = 0xEE6BCF03;
			Guid.B = 0xED82CA38;
			Guid.C = 0x00000000;
			Guid.D = 0x00000000;
			ReturnPackage->SetGuid(Guid);
		}
		return ReturnPackage;
	}
#endif

